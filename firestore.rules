
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Rule for the artisans' profile documents
    match /artisans/{artisanId} {
      // Allow a user to create, read, and update their own artisan profile.
      allow read, write: if request.auth != null && request.auth.uid == artisanId;
      allow delete: if false; // Prevent accidental profile deletion

      // Rule for the 'products' subcollection within an artisan's document
      match /products/{productId} {
        // Allow create if the new product's artisanId matches the user's UID.
        allow create: if request.auth != null && request.resource.data.artisanId == request.auth.uid;
        
        // Allow read for anyone (for direct lookups, though collection group is preferred).
        allow read: if true;
        
        // Allow update/delete if the user is the owner of the existing product.
        allow update, delete: if request.auth != null && resource.data.artisanId == request.auth.uid;
      }
    }
    
    // This collection group rule is essential for the main marketplace query.
    // It allows anyone to read documents from any 'products' collection across all artisans.
    match /{path=**}/products/{productId} {
      allow read: if true;
    }

    // Rules for the root /products collection, as requested.
    match /products/{productId} {
      // Allow read for everyone, as this is for the public marketplace.
      allow read: if true;
      
      // Allow create, update, delete only by the product's owner.
      // On create, check the incoming document data.
      // On update/delete, check the existing document data.
      allow create: if request.auth != null && request.resource.data.artisanId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.artisanId == request.auth.uid;
    }
  }
}
